FROM nvidia/cuda:11.3.1-cudnn8-devel-ubuntu20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV USERNAME=ros
ENV ROS_PYTHON_VERSION=3
ENV ROS_DISTRO=noetic
ENV ROBOT_IP=192.168.1.3
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all

SHELL ["/bin/bash", "-c"]

# Install ROS and essential packages
RUN apt-get update \
    && apt-get install -y \
    ros-noetic-desktop-full \
    nano \
    curl \
    git \
    iputils-ping \
    python3-pip \
    python3-catkin-tools \
    python3-rosdep 

# Setup ROS repositories
RUN apt-get update && apt-get install -y curl gnupg2 lsb-release \
    && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - \
    && echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list

# Create the "ros" user with the host user's IDs
ARG USER_ID=1000
ARG GROUP_ID=1000

RUN adduser --disabled-password --gecos '' $USERNAME \
    && usermod  --uid $USER_ID $USERNAME \
    && groupmod --gid $GROUP_ID $USERNAME \
    && usermod --shell /bin/bash $USERNAME \
    && adduser $USERNAME sudo \
    && adduser $USERNAME dialout \
    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER $USERNAME

# Setup CUDA environment
RUN echo 'export PATH=/usr/local/cuda-11.3/bin${PATH:+:${PATH}}' >> /home/$USERNAME/.bashrc \
    && echo 'export LD_LIBRARY_PATH=/usr/local/cuda-11.3/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}' >> /home/$USERNAME/.bashrc \
    && echo 'export ROBOT_IP=$ROBOT_IP' >> /home/$USERNAME/.bashrc \
    && echo 'export ROS_HOSTNAME=localhost' >> /home/$USERNAME/.bashrc \
    && echo 'export ROS_MASTER_URI=http://localhost:11311' >> /home/$USERNAME/.bashrc 

# Rest of your existing Dockerfile remains the same, starting from:
RUN mkdir -p /home/$USERNAME/catkin_ws/src \
    && chown -R $USERNAME:$USERNAME /home/$USERNAME/catkin_ws
WORKDIR /home/$USERNAME/catkin_ws

# Copy code into workspace
COPY --chown=$USERNAME ./noetic_src src

# Configure python3.9 virtual environment
RUN apt-get update \
    && apt-get install -y \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && apt-get install -y \ 
    python3.9 \
    python3.9-venv \
    python3.9-dev \
    && rm -rf /var/lib/apt/lists/* \
    && cd /home/$USERNAME/catkin_ws/ \
    && python3.9 -m venv "venv3.9" \
    && source /home/$USERNAME/catkin_ws/venv3.9/bin/activate 

# Install PyTorch suitable for CUDA 11.3
RUN pip3 install \ 
    torch==1.11.0+cu113 \
    torchvision==0.12.0+cu113 \
    torchaudio==0.11.0 \
    --extra-index-url https://download.pytorch.org/whl/cu113 

# Install necessary GroundingDino dependency
RUN cd /home/$USERNAME/catkin_ws/src/OVGNet/groundingdino \
    && pip3 install -e .

# Install necessary graspnet model dependency
RUN cd /home/$USERNAME/catkin_ws/src/OVGNet/graspnet/graspnet/pointnet2 \
    && python3 setup.py install \
    && cd /home/$USERNAME/catkin_ws/src/OVGNet/graspnet/graspnet/knn \
    && python3 setup.py install

# Install Open-GroundingDino for test Visual Grounding implementation
RUN cd /home/$USERNAME/catkin_ws/src/OVGNet/test_vg/Open-GroundingDino \
    && pip3 install -r requirements.txt \
    && cd /home/$USERNAME/catkin_ws/src/OVGNet/test_vg/Open-GroundingDino/models/GroundingDINO/ops \
    && python setup.py build install \
    && python test.py

# Install OVGNet dependency
RUN cd /home/$USERNAME/catkin_ws/src/OVGNet/ \
    && export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True \
    && pip3 install -r requirements.txt

# Source ROS environment
RUN source /opt/$USERNAME/$ROS_DISTRO/setup.bash \
    && cd /home/$USERNAME/catkin_ws \
    && rosdep init && rosdep update \
    && catkin init 

# Install dependencies and build workspace
RUN source /opt/$USERNAME/$ROS_DISTRO/setup.bash \
    && sudo apt-get update \
    && rosdep update \
    && rosdep install --from-paths . --ignore-src -r -y --rosdistro=$ROS_DISTRO \
    && catkin build 

RUN sudo apt-get update \
    && sudo apt-get upgrade -y \
    && echo 'source /opt/$USERNAME/$ROS_DISTRO/setup.bash' >> /home/$USERNAME/.bashrc \
    && echo 'source /home/$USERNAME/catkin_ws/venv/bin/activate' >> /home/$USERNAME/.bashrc \
    && echo 'source /home/$USERNAME/catkin_ws/devel/setup.bash' >> /home/$USERNAME/.bashrc
